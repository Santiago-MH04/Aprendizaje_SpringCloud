spring.application.name=msvc-products
    #Setting the application to the port zero enables Spring context to automatically assign a port to the app
server.port=${PORT:0}
eureka.instance.instance-id=${spring.cloud.client.hostname}:${spring.application.name}:${random.value}
    #Database configuration (it's now connected to the Docker container instance)
    #spring.datasource.url=jdbc:mysql://localhost:3306/curso_springcloud?serverTimezone=America/Bogota
    #spring.datasource.url=jdbc:mysql://mysql8:3306/curso_springcloud?serverTimezone=America/Bogota
spring.datasource.url=jdbc:mysql://${MYSQL_URL:mysql8:3306}/curso_springcloud?serverTimezone=America/Bogota
spring.datasource.username=${MYSQL_USER:root}
spring.datasource.password=${MYSQL_PASSWORD:sasa}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
spring.jpa.show-sql=true
    #Cuidadongos non-available for production
#spring.jpa.hibernate.ddl-auto=create
    #To bring up messages (people say over there this is a good practice)
#spring.messages.basename=messages.properties

    #Netflix Eureka server connection (it's connected now to the Docker container instance)
    #eureka.client.service-url.defaultZone=http://127.0.0.1:8761/eureka
    #eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka
eureka.client.service-url.defaultZone=${EUREKA_URL:http://eureka-server:8761/eureka}
