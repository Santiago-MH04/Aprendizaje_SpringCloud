  #Con un application.yml, las configuraciones de este tienen prelación por sobre las de la clase de configuración
resilience4j:
  circuitbreaker:
    configs:
      default:  #Es solamente un nombre que yo le asigno
        sliding-window-size: 6 #Seis intentos, porque ajá
        failure-rate-threshold: 50
        wait-duration-in-open-state: 20s  #Es sumamente importante especificar la unidad de tiempo
        permitted-number-of-calls-in-half-open-state: 4
        slow-call-duration-threshold: 3s  #Es sumamente importante especificar la unidad de tiempo
        slow-call-rate-threshold: 50
    instances:
      items:  #Busca el circuit breaker con nombre items (está en ItemController)
        base-config: default  #Asigna la configuración de nombre default en la instancia llamada items
  time-limiter:
    configs:
      default:  #Es solamente un nombre que yo le asigno
        timeout-duration: 3s  #Es sumamente importante especificar la unidad de tiempo
    instances:
      items: #Busca el circuit breaker con nombre items (está en ItemController)
        base-config: default  #Asigna la configuración de nombre default en la instancia llamada items

  #Según la documentación oficial de Spring, el archivo bootstrap.properties, ya no está recomendado, por lo que pego aquí la configuración externa
  #Sería la misma jerarquía del bootstrap.properties, y otra pendejadita
  #De la misma manera, esto se puede enviar al application.properties, con la misma bobadita, pero sin la url (spring.config.import=optional:configserver:)
  #profiles.active para activar al proyecto en este perfil particular (default, dev, prod)
#spring:
#  application:
#    name: msvc-items
#  cloud:
#    config:
#      uri: http://127.0.0.1:8888
#  config:
#    import: optional:configserver:http://127.0.0.1:8888
#  profiles:
#    active: prod